ChinArkDRCClient
1.clientInit
  通过DRCUtilFactory定义了各种方法
  1.通过环境变量查找安装路径
  2.利用安装路径初始化各种目录g_moduleConfigPath[]
  3.初始化配置文件路径g_hotsConfigPath
2._access
  用来检测路径是否存在
ClientApp::run()
流程：
1.中断处理函数(一开始就进行了中断)
2.获取客户端版本
3.获取灾备机连接信息：ip/port/name/protocal,根据连接信息建立任务管理。
4.获取生产机信息：ip/mac/
---获取context
5.创建客户端回调适配器
6.创建各种进程
7.每隔一段时间重新注册，确保连接正常。
8.销毁所有子线程
checkServerInfo 一直循环等待ip和port
sendKeepAliveMessage
server->taskController中
通过一个保活计时器线程，通过sendKeepAliveMessage不断的更新相应UUID对应的context中的时间戳。
1.加锁
2.根据UUID得到context
3.利用context更新lastTimeIntval与timeIntval
LisenceHandller
handle处理的机制？？
循环判断客户端是否退出，如果没有退出，则一直监听。
1.读取配置信息
2.检测数据库是否连接，客户端配置信息是否存在；如果是否，则等待一个时刻。
3.检测客户端是否已经删除，如果是，则删除模块信息，备份信息。
4.更新模块信息
handleModuleInfo
作用：同步本地与远程的模块开启状态
1.检测模块信息是否发生变化，如果未发生变化则什么都不做。如果发生变化则进行下面的步骤。
2.打印相关调试信息，表明本地模块信息与远程注册模块不一致。
3.判断模块信息不一致的原因。如果远程模块开启则在本地开启模块，如果远程模块已经关闭而本地模块仍然开启，则关闭本地的模块。
TEST_MODULE_ACTIVATE
各个地方的文件怎样统一能用